<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: db.proto

namespace Template;

use UnexpectedValueException;

/**
 * Protobuf type <code>template.Language</code>
 */
class Language
{
    /**
     * Token: 0x04001AFD RID: 6909
     *
     * Generated from protobuf enum <code>English = 0;</code>
     */
    const English = 0;
    /**
     * Token: 0x04001AFE RID: 6910
     *
     * Generated from protobuf enum <code>Chinese = 1;</code>
     */
    const Chinese = 1;
    /**
     * Token: 0x04001AFF RID: 6911
     *
     * Generated from protobuf enum <code>Japanese = 2;</code>
     */
    const Japanese = 2;
    /**
     * Token: 0x04001B00 RID: 6912
     *
     * Generated from protobuf enum <code>German = 3;</code>
     */
    const German = 3;
    /**
     * Token: 0x04001B01 RID: 6913
     *
     * Generated from protobuf enum <code>French = 4;</code>
     */
    const French = 4;

    private static $valueToName = [
        self::English => 'English',
        self::Chinese => 'Chinese',
        self::Japanese => 'Japanese',
        self::German => 'German',
        self::French => 'French',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

